---

- name: nginx package
  yum: name=nginx state=present disablerepo='*' enablerepo={{ ghettoforge }}

- name: default.conf file
  file: path=/etc/nginx/conf.d/default.conf state=absent

- name: example_ssl.conf file
  file: path=/etc/nginx/conf.d/example_ssl.conf state=absent

- name: nginx service
  service: name=nginx state=started enabled=yes

- name: Create the directories for site specific configurations
  file: path={{nginx_conf_dir}}/{{ item }} state=directory owner=root group={{nginx_group}} mode=0755
  with_items:
    - "sites-available"
    - "sites-enabled"
    - "conf.d"

- name: Ensure log directory exist
  file: path={{ nginx_log_dir }} state=directory owner={{nginx_user}} group={{nginx_group}} mode=0755

- name: Copy the nginx configuration file
  template: src=nginx.conf.j2 dest={{nginx_conf_dir}}/nginx.conf
  notify:
    - restart nginx

- name: Create the configurations for sites
  template: src=site.conf.j2 dest={{nginx_conf_dir}}/sites-available/{{ item }}.conf
  with_items: nginx_sites.keys() | difference(nginx_remove_sites)
  notify:
    - reload nginx

- name: Create links for sites-enabled
  file: state=link src={{nginx_conf_dir}}/sites-available/{{ item }}.conf dest={{nginx_conf_dir}}/sites-enabled/{{ item }}.conf
  with_items: nginx_sites.keys() | difference(nginx_remove_sites)
  notify:
    - reload nginx

- name: Create the configurations for independent config file
  template: src=config.conf.j2 dest={{nginx_conf_dir}}/conf.d/{{ item }}.conf
  with_items: nginx_configs.keys()
  notify:
    - reload nginx
